/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package siskrip;

    import java.sql.*;
    import javax.swing.*;

/**
 *
 * @author ASUS
 */
public class KomentarDsn extends javax.swing.JFrame {

    /**
     * Creates new form KomentarDsn
     */
    public KomentarDsn() {
        if (Session.nim_nidn == null) {
            JOptionPane.showMessageDialog(this, "Akses ditolak! Silahkan login dahulu.");
            System.exit(0);
        }
        initComponents();
        setLocationRelativeTo(null);
        this.setResizable(false);
    }
    
    private int getDokumenIdByJudul(int judulId) throws SQLException {
    int dokumenId = -1;
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/siskrip", "root", "");
    String sql = "SELECT dokumen_id FROM dokumenskripsi WHERE judul_id = ? ORDER BY dokumen_id DESC LIMIT 1";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setInt(1, judulId);
    ResultSet rs = pst.executeQuery();

    if (rs.next()) {
        dokumenId = rs.getInt("dokumen_id");
    }

    rs.close();
    pst.close();
    conn.close();

    return dokumenId;
}
    
    private int getMahasiswaIdByJudul(int judulId) throws SQLException {
    int mahasiswaId = -1;
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/siskrip", "root", "");
    String sql = "SELECT mahasiswa_id FROM dokumenskripsi WHERE judul_id = ? ORDER BY dokumen_id DESC LIMIT 1";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setInt(1, judulId);
    ResultSet rs = pst.executeQuery();

    if (rs.next()) {
        mahasiswaId = rs.getInt("mahasiswa_id");
    }

    rs.close();
    pst.close();
    conn.close();

    return mahasiswaId;
}



    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtKomentar = new javax.swing.JTextArea();
        btnKomentar = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Beranda = new javax.swing.JMenuItem();
        jSeparator9 = new javax.swing.JPopupMenu.Separator();
        Profil = new javax.swing.JMenuItem();
        jSeparator10 = new javax.swing.JPopupMenu.Separator();
        Logout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(87, 143, 202));

        txtKomentar.setColumns(20);
        txtKomentar.setRows(5);
        jScrollPane1.setViewportView(txtKomentar);

        btnKomentar.setText("Kirim Komentar");
        btnKomentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKomentarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(btnKomentar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(109, 109, 109))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(51, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(btnKomentar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar2.setBackground(new java.awt.Color(54, 116, 181));

        jMenu1.setText("Menu");

        Beranda.setText("Beranda");
        Beranda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BerandaActionPerformed(evt);
            }
        });
        jMenu1.add(Beranda);
        jMenu1.add(jSeparator9);

        Profil.setText("Profil");
        Profil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfilActionPerformed(evt);
            }
        });
        jMenu1.add(Profil);
        jMenu1.add(jSeparator10);

        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        jMenu1.add(Logout);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BerandaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BerandaActionPerformed
        new BerandaDsn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BerandaActionPerformed

    private void ProfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfilActionPerformed
        new ProfilDsn().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_ProfilActionPerformed

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogoutActionPerformed

    private void btnKomentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKomentarActionPerformed
     try {
    // Pastikan hanya DOSEN yang bisa kirim
    if (!Session.role.equalsIgnoreCase("Dosen")) {
        JOptionPane.showMessageDialog(this, "Hanya dosen yang dapat mengirim komentar.");
        return;
    }
    String isiKomentar = txtKomentar.getText().trim();
    if (isiKomentar.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Komentar tidak boleh kosong!");
        return;
    }
    int judulId = Session.judul_id;
    // 1️⃣ Ambil dokumen_id
    int dokumenId = getDokumenIdByJudul(judulId);
    if (dokumenId == -1) {
        JOptionPane.showMessageDialog(this, "Dokumen tidak ditemukan untuk judul ini.");
        return;
    }
    // 2️⃣ Ambil mahasiswa_id dari dokumenskripsi
    int mahasiswaId = getMahasiswaIdByJudul(judulId);
    if (mahasiswaId == -1) {
        JOptionPane.showMessageDialog(this, "Mahasiswa tidak ditemukan untuk judul ini.");
        return;
    }
    // 3️⃣ dosen_id dari sesi login
    int dosenId = Session.user_id;
    // INSERT ke komentarbimbingan
    Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/siskrip", "root", "");
    String sql = "INSERT INTO komentarbimbingan (dosen_id, mahasiswa_id, dokumen_id, komentar) VALUES (?, ?, ?, ?)";
    PreparedStatement pst = conn.prepareStatement(sql);
    pst.setInt(1, dosenId);
    pst.setInt(2, mahasiswaId);
    pst.setInt(3, dokumenId);
    pst.setString(4, isiKomentar);

    int hasil = pst.executeUpdate();
    if (hasil > 0) {
        JOptionPane.showMessageDialog(this, "Komentar berhasil dikirim!");
        txtKomentar.setText("");
    } else {
        JOptionPane.showMessageDialog(this, "Gagal mengirim komentar.");
    }
    pst.close();
    conn.close();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Gagal menyimpan komentar: " + e.getMessage());
}
    }//GEN-LAST:event_btnKomentarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KomentarDsn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KomentarDsn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KomentarDsn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KomentarDsn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KomentarDsn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Beranda;
    private javax.swing.JMenuItem Logout;
    private javax.swing.JMenuItem Profil;
    private javax.swing.JButton btnKomentar;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator10;
    private javax.swing.JPopupMenu.Separator jSeparator9;
    private javax.swing.JTextArea txtKomentar;
    // End of variables declaration//GEN-END:variables
}
